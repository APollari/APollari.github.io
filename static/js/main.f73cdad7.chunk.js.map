{"version":3,"sources":["components/landingpage.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","style","width","noSpacing","className","col","href","rel","target","aria-hidden","tablet","textAlign","src","alt","Component","Projects","props","state","activeTab","this","shadow","margin","color","height","background","fontWeight","border","colored","name","minWidth","onChange","tabId","setState","ripple","toggleCategories","Main","exact","path","component","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f73cdad7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Landing extends Component {\r\n    render(){\r\n        return(\r\n            <div style={{width: '100%'}}>\r\n\r\n                    <Grid noSpacing className=\"hero-banner\">\r\n                        <Cell col={12}>\r\n                            <div className=\"hero-background\">\r\n                            <h1>Junior Developer</h1>\r\n                            <p>C# | Games | Websites</p>\r\n                            <div className=\"social-links\">\r\n                                {/*Linkedin */}\r\n                                <a href=\"https://www.linkedin.com/in/annika-pollari/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n\r\n                                {/*Github */}\r\n                                <a href=\"https://github.com/APollari\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                                </a> \r\n                            </div>\r\n                            </div>\r\n\r\n                        <div className=\"landing-content\">\r\n                            <Grid >\r\n                                <Cell col={4} tablet={12} style={{textAlign: \"center\"}}>\r\n                                    <img \r\n                                        src=\"/assets/avatar-png\"\r\n                                        alt=\"avatar\"\r\n                                        className=\"avatar-img\"\r\n                                        \r\n                                    />\r\n                                </Cell>\r\n\r\n                                <Cell col={8} tablet={12}>\r\n                                    <h1>Annika Pollari</h1>\r\n                                    <p>Hi, my name is <strong>Annika</strong> and I am enthusiastic <strong>programmer</strong>. I have started my career\r\n                                    by diving in to the world of mobile games and it has taught me a lot. I enjoy programming and I am always ready to learn new tricks!\r\n                                    <br/><br/>\r\n                                    This  portofolio site is part of my React learning process and I am going to develop it further during my projects.</p>\r\n                                </Cell>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                        </Cell>\r\n                    </Grid>\r\n                \r\n                    \r\n        \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Tabs, Tab, Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText } from 'react-mdl';\r\n\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeTab: 0};\r\n    }\r\n\r\n    toggleCategories(){\r\n        if(this.state.activeTab === 0){\r\n            return(\r\n\r\n            <div className=\"projects-div\">\r\n                <Card shadow={5} style={{width: '250' , margin: '30px'}}>\r\n                    <CardTitle style={{color: '#fff', height: '176px', background: '#12947f', fontWeight: 'bold'}}>Goatling</CardTitle>\r\n                    <CardText>Goatling - Ultimate mountain jump is a hyper casual jumping game for android. \r\n                        <br/><br/>\r\n                        This project was made with Unity 3D and C#. I was project's lead programmer and worked along with artist and designer.</CardText>\r\n                    <CardActions border>\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.LostHoodie.Goatling\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        <Button colored >Google Play</Button>\r\n                    </a>\r\n                    </CardActions>\r\n                    <CardMenu style={{color: '#fff'}}>\r\n                        <IconButton name=\"share\" />\r\n                    </CardMenu>\r\n                </Card>\r\n                \r\n\r\n            \r\n                <Card shadow={5} style={{width: '250' , margin: '30px'}}>\r\n                    <CardTitle style={{color: '#fff', height: '176px', background : '#12947f'}}>Shred 'n' Slam</CardTitle>\r\n                    <CardText>Shred 'n' Slam is a skateboarding game for mobile and it was the first game project I have worked on.\r\n                        <br/><br/>\r\n                        Project was made with Unity 3D and C#. In this project my main task was to build and program user interface components and functions.</CardText>\r\n                    <CardActions border>\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.LostHoodie.ShredNSlam\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        <Button colored >Google Play</Button>\r\n                        </a>\r\n                    </CardActions>\r\n                    <CardMenu style={{color: '#fff'}}>\r\n                        <IconButton name=\"share\" />\r\n                    </CardMenu>\r\n                </Card>\r\n                \r\n            </div>\r\n                \r\n            )\r\n        } else if(this.state.activeTab === 1){\r\n            return(\r\n                <div className=\"projects-div\">\r\n                <Card shadow={5} style={{minWidth: '500' , margin: '30px'}}>\r\n                <CardTitle style={{color: '#fff', height: '176px', background : '#12947f'}}>Lost Hoodie</CardTitle>\r\n                    <CardText>Wordpress based website for Lost Hoodie Oy.</CardText>\r\n                    <CardActions border>\r\n                    <a href=\"https://losthoodie.com\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        <Button colored>Website</Button>\r\n                        </a>\r\n                    </CardActions>\r\n                    <CardMenu style={{color: '#fff'}}>\r\n                        <IconButton name=\"share\" />\r\n                    </CardMenu>\r\n                </Card>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{height: '100%', margin: 'auto'}}>\r\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId})} ripple>\r\n                    <Tab>Unity</Tab>\r\n                    <Tab>Websites</Tab>\r\n                </Tabs>\r\n                <div className=\"category-tabs\">\r\n                    <Grid>\r\n                        <Cell col={12}>\r\n                            <div>{this.toggleCategories()}</div>\r\n                        </Cell>\r\n                    </Grid>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Landing from './landingpage';\r\nimport Projects from './projects';\r\n\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className='header-color' title=\"Annika Pollari\" scroll>\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \n    <HashRouter>\n    <App />\n    </HashRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}